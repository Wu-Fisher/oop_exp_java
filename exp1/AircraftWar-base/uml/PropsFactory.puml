@startuml
'https://plantuml.com/class-diagram
class Game{

}

abstract PropsFactory{
    + callProps(String type, int x, int y):AbstractProps
    - {abstract} createProps(String type, int x, int y):AbstractProps

}

class EasyProFactory{
    - createProps(String type, int x, int y):AbstractProps
}
class NormalProFactory {
    - createProps(String type, int x, int y):AbstractProps
}
class HardProFactory {
    - createProps(String type, int x, int y):AbstractProps
}

PropsFactory <|-- EasyProFactory
PropsFactory <|-- NormalProFactory
PropsFactory <|-- HardProFactory

Game -> PropsFactory 

AbstractProps <|-- BloodProps
AbstractProps <|-- BulletProps
AbstractProps <|-- BombProps

EasyProFactory..>BloodProps
EasyProFactory..>BulletProps
EasyProFactory..>BombProps

NormalProFactory..>BloodProps
NormalProFactory..>BulletProps
NormalProFactory..>BombProps

HardProFactory..>BloodProps
HardProFactory..>BulletProps
HardProFactory..>BombProps



abstract class AbstractProps{
    + AbstractProps(int locationX, int locationY, int speedX, int speedY):void
    +{abstract}effectCrash():void
}

class BloodProps
{
    + BloodProps(int locationX, int locationY, int speedX, int speedY)
    + effectCrash():void
}

class BulletProps
{
    + BulletProps(int locationX, int locationY, int speedX, int speedY)
    + effectCrash():void
}

class BombProps
{
    + BombProps(int locationX, int locationY, int speedX, int speedY)
    + effectCrash():void
}





@enduml